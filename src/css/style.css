/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
*,
*::before,
*::after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  margin: 0.67em 0;
  font-size: 2em;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  overflow: visible;
  /* 2 */
  height: 0;
  /* 1 */
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  display: block;
  max-width: 100%;
  height: auto;
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  /* 2 */
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

.title {
  margin: 10px 0 14px;
  color: #4764b0;
  font-size: 24px;
  font-weight: bold;
  line-height: 1;
}
@media (min-width: 1020px) {
  .title {
    margin-bottom: 20px;
    font-size: 32px;
  }
}

.subtitle {
  font-size: 14px;
  font-weight: normal;
  margin: 0;
}
@media (min-width: 1020px) {
  .subtitle {
    font-size: 18px;
  }
}

p {
  margin: 8px 0;
}
@media (min-width: 1020px) {
  p {
    margin: 10px 0;
  }
}
p:last-child {
  margin-bottom: 0;
}

ul {
  padding: 0;
  margin: 0;
  list-style: none;
}
ul li {
  position: relative;
  padding-left: 24px;
  margin-bottom: 10px;
}
ul li::before {
  position: absolute;
  top: 12px;
  left: 0;
  display: inline-block;
  width: 16px;
  height: 2px;
  background-color: #4764b0;
  content: "";
  font-size: 20px;
}

body {
  min-width: 300px;
  background-color: #fff;
  color: #1e1e1e;
  font: 12px/1.5 arial, "Segoe UI", roboto, "Helvetica Neue", helvetica, sans-serif;
}
@media (min-width: 1020px) {
  body {
    font-size: 16px;
  }
}

.container {
  margin: 0 auto;
}
@media (min-width: 700px) {
  .container {
    max-width: 610px;
  }
}
@media (min-width: 1020px) {
  .container {
    max-width: 930px;
  }
}
@media (min-width: 1340px) {
  .container {
    max-width: 1250px;
  }
}

.main {
  padding-right: 15px;
  padding-bottom: 30px;
  padding-left: 15px;
  background-color: orange;
}
@media (min-width: 700px) {
  .main {
    padding-right: 0;
    padding-left: 0;
  }
}
.main__container {
  background-color: #f5f0f0;
  background-color: green;
}

.tile {
  position: relative;
  top: -40px;
  padding-top: 28px;
  padding-right: 15px;
  padding-bottom: 40px;
  padding-left: 20px;
  background-color: #fff;
  z-index: 2;
  background-color: yellow;
}
@media (min-width: 1020px) {
  .tile {
    top: -80px;
    padding-top: 42px;
    padding-right: 30px;
    padding-bottom: 52px;
    padding-left: 60px;
  }
}
.tile--left {
  left: -20px;
}
@media (min-width: 1020px) {
  .tile--left {
    left: -62px;
  }
}
.tile--right {
  right: 0;
}
@media (min-width: 1020px) {
  .tile--right {
    /*left: -62px;*/
  }
}

@font-face {
  font-family: "swiper-icons";
  font-style: normal;
  font-weight: 400;
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
}
:root {
  --swiper-theme-color: #007aff;
}

.swiper {
  position: relative;
  /* Fix of Webkit flickering */
  z-index: 1;
  overflow: hidden;
  padding: 0;
  margin-right: auto;
  margin-left: auto;
  list-style: none;
}

.swiper-vertical > .swiper-wrapper {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  z-index: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 100%;
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  -o-transition-property: transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
}

.swiper-android .swiper-slide,
.swiper-wrapper {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
}

.swiper-pointer-events {
  -ms-touch-action: pan-y;
      touch-action: pan-y;
}
.swiper-pointer-events.swiper-vertical {
  -ms-touch-action: pan-x;
      touch-action: pan-x;
}

.swiper-slide {
  position: relative;
  width: 100%;
  height: 100%;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  -o-transition-property: transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */
.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}
.swiper-autoheight .swiper-wrapper {
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  -webkit-transition-property: height, -webkit-transform;
  transition-property: height, -webkit-transform;
  -o-transition-property: transform, height;
  transition-property: transform, height;
  transition-property: transform, height, -webkit-transform;
}

/* 3D Effects */
.swiper-3d, .swiper-3d.swiper-css-mode .swiper-wrapper {
  -webkit-perspective: 1200px;
          perspective: 1200px;
}
.swiper-3d .swiper-wrapper,
.swiper-3d .swiper-slide,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-cube-shadow {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-slide-shadow-bottom {
  position: absolute;
  z-index: 10;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}
.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}
.swiper-3d .swiper-slide-shadow-left {
  background-image: -webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: -o-linear-gradient(right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-right {
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-top {
  background-image: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: -o-linear-gradient(bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}
.swiper-3d .swiper-slide-shadow-bottom {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: -o-linear-gradient(top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

/* CSS Mode */
.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  -ms-overflow-style: none;
  /* For Internet Explorer and Edge */
  scrollbar-width: none;
  /* For Firefox */
}
.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}
.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-horizontal.swiper-css-mode > .swiper-wrapper {
  -webkit-scroll-snap-type: x mandatory;
      -ms-scroll-snap-type: x mandatory;
          scroll-snap-type: x mandatory;
}

.swiper-vertical.swiper-css-mode > .swiper-wrapper {
  -webkit-scroll-snap-type: y mandatory;
      -ms-scroll-snap-type: y mandatory;
          scroll-snap-type: y mandatory;
}

.swiper-centered > .swiper-wrapper::before {
  -ms-flex-negative: 0;
      flex-shrink: 0;
  -webkit-box-ordinal-group: 10000;
      -ms-flex-order: 9999;
          order: 9999;
  content: "";
}
.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-start: var(--swiper-centered-offset-before);
          margin-inline-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  width: var(--swiper-centered-offset-after);
  height: 100%;
}
.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-before: var(--swiper-centered-offset-before);
          margin-block-start: var(--swiper-centered-offset-before);
}
.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  height: var(--swiper-centered-offset-after);
}
.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
}

.swiper {
  position: relative;
}

.swiper-button-prev,
.swiper-button-next {
  padding: 0;
  border: 0;
  background-color: transparent;
  cursor: pointer;
  display: none;
  width: 20px;
  height: 6px;
  -webkit-transition: -webkit-transform 0.25s ease-out 0s;
  transition: -webkit-transform 0.25s ease-out 0s;
  -o-transition: transform 0.25s ease-out 0s;
  transition: transform 0.25s ease-out 0s;
  transition: transform 0.25s ease-out 0s, -webkit-transform 0.25s ease-out 0s;
}
@media (min-width: 1340px) {
  .swiper-button-prev,
.swiper-button-next {
    display: block;
  }
}

.swiper-button-prev {
  background: url(../img/icon-prev.png) no-repeat 50% 50%;
}
.swiper-button-prev:hover {
  -webkit-transform: translateX(-4px);
      -ms-transform: translateX(-4px);
          transform: translateX(-4px);
}

.swiper-button-next {
  background: url(../img/icon-next.png) no-repeat 50% 50%;
  margin-bottom: 5px;
}
.swiper-button-next:hover {
  -webkit-transform: translateX(4px);
      -ms-transform: translateX(4px);
          transform: translateX(4px);
}

.swiper-pagination {
  position: absolute;
  bottom: 40px;
  left: 50%;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%);
  z-index: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
@media (min-width: 1340px) {
  .swiper-pagination {
    display: none;
  }
}

.swiper-pagination-bullet {
  display: block;
  height: 6px;
  width: 6px;
  border-radius: 50%;
  background-color: #fff;
  margin: 0 5px;
}
.swiper-pagination-bullet-active {
  -webkit-transform: scale(1.66);
      -ms-transform: scale(1.66);
          transform: scale(1.66);
}

.header {
  padding-top: 24px;
  padding-bottom: 30px;
}
@media (min-width: 1020px) {
  .header {
    padding-top: 40px;
    padding-bottom: 40px;
  }
}
.header__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  padding-right: 35px;
  padding-left: 35px;
}
@media (min-width: 1020px) {
  .header__container {
    padding-right: 60px;
    padding-left: 60px;
  }
}
.header__logo {
  max-width: 106px;
}
@media (min-width: 700px) {
  .header__logo {
    max-width: 150px;
  }
}
.header__link {
  color: currentColor;
  text-decoration: none;
  display: none;
  width: 20px;
  height: 20px;
  background: url(../img/icon-link.png) no-repeat 50% 50%;
  font-size: 0;
}
@media (min-width: 700px) {
  .header__link {
    display: block;
  }
}
.header__link:hover {
  -webkit-transform: scale(1.2);
      -ms-transform: scale(1.2);
          transform: scale(1.2);
  -webkit-transition: -webkit-transform 0.25s ease-out 0s;
  transition: -webkit-transform 0.25s ease-out 0s;
  -o-transition: transform 0.25s ease-out 0s;
  transition: transform 0.25s ease-out 0s;
  transition: transform 0.25s ease-out 0s, -webkit-transform 0.25s ease-out 0s;
}

.about {
  /*display: flex;*/
  /*flex-direction: column;*/
  padding-left: 10px;
}
@media (min-width: 1020px) {
  .about {
    padding-left: 30px;
  }
}
.about__inner {
  position: relative;
  padding-left: 9px;
  border-left: 1px solid #d2c8c8;
}
@media (min-width: 1020px) {
  .about__inner {
    padding-left: 30px;
    border-left-width: 2px;
    margin-left: auto;
  }
}
@media (min-width: 1340px) {
  .about__inner {
    width: 952px;
  }
}
@media (min-width: 1340px) {
  .about__tile {
    position: absolute;
    top: 67px;
    left: -300px;
    width: 550px;
  }
}
@media (min-width: 1340px) {
  .about__picture {
    width: 920px;
    height: 570px;
  }
}
.about__img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.projects {
  /*    display: flex;
      flex-direction: column;*/
  padding-left: 10px;
  margin-top: -15px;
}
@media (min-width: 1020px) {
  .projects {
    padding-left: 30px;
  }
}
@media (min-width: 1340px) {
  .projects {
    margin-top: 0;
  }
}
.projects__inner {
  position: relative;
  padding-left: 9px;
  border-left: 1px solid #d2c8c8;
  border-bottom: 1px solid #d2c8c8;
  padding-bottom: 40px;
}
@media (min-width: 1020px) {
  .projects__inner {
    padding-left: 30px;
    border-left-width: 2px;
    border-bottom-width: 2px;
  }
}
@media (min-width: 1340px) {
  .projects__inner {
    margin-left: auto;
    width: 952px;
    padding-top: 90px;
  }
}
.projects__intro {
  margin-bottom: 24px;
  padding-left: 10px;
}
@media (min-width: 1340px) {
  .projects__intro {
    padding-left: 0;
    max-width: 710px;
    margin-bottom: 54px;
  }
}
.projects__outro {
  padding-left: 10px;
  margin-top: -15px;
}
@media (min-width: 1340px) {
  .projects__outro {
    padding-left: 0;
    max-width: 710px;
    margin-top: 40px;
  }
}
.projects__slider {
  position: relative;
  width: 100%;
}
.projects__tile {
  top: -31px;
  padding-top: 23px;
  padding-bottom: 23px;
}
@media (min-width: 1020px) {
  .projects__tile {
    padding-top: 56px;
    padding-bottom: 58px;
  }
}
@media (min-width: 1340px) {
  .projects__tile {
    position: absolute;
    top: 36px;
    width: 470px;
  }
}
.projects__swiper {
  position: relative;
  left: -20px;
  margin: 0;
  z-index: 1;
  width: 100%;
}
@media (min-width: 1020px) {
  .projects__swiper {
    left: -62px;
    width: 100%;
  }
}
@media (min-width: 1340px) {
  .projects__swiper {
    left: -330px;
    width: 920px;
    height: 554px;
  }
}
.projects__swiper img {
  -o-object-fit: cover;
     object-fit: cover;
  height: 100%;
  width: 100%;
}
.projects .swiper-buttons {
  position: absolute;
  right: 59px;
  bottom: 100px;
  z-index: 2;
  width: 68px;
}

.today {
  padding-left: 10px;
}
.today__intro {
  padding-top: 28px;
  padding-left: 10px;
  padding-right: 20px;
  padding-bottom: 40px;
}
@media (min-width: 1020px) {
  .today__intro {
    padding-left: 60px;
    padding-top: 34px;
    padding-right: 60px;
  }
}
.today__cols {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.today__col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  width: 46%;
}
@media (min-width: 1020px) {
  .today__col {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
        -ms-flex-direction: row;
            flex-direction: row;
    width: 48%;
  }
}
.today__col:last-child {
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.today__col p:first-child {
  margin-top: 0;
}
.today__stat:first-child {
  margin-bottom: 20px;
}
.today__stat b {
  font-weight: bold;
  text-transform: uppercase;
  display: block;
}
.today__stat strong {
  font-weight: bold;
  font-size: 36px;
  line-height: 36px;
  margin: 10px 0;
}
.today__stat strong + b {
  display: inline-block;
}
.today__stat p {
  margin-top: 6px;
}
.today__inner {
  border-left: 1px solid #d2c8c8;
  border-bottom: 1px solid #d2c8c8;
  position: relative;
  padding-left: 9px;
  padding-top: 20px;
}
.today__tile {
  top: 0;
}
.today__picture {
  position: relative;
  top: -40px;
  z-index: 1;
}

.personal {
  padding-left: 20px;
}
.personal__title {
  margin-top: 20px;
  margin-bottom: 20px;
  padding-right: 20px;
}
.personal__tile {
  top: 0;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */